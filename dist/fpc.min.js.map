{"version":3,"file":"fpc.min.js","sources":["../src/basic.coffee","../src/add.coffee","../src/divide.coffee","../src/multiply.coffee","../src/power.coffee","../src/random1.coffee","../src/random2.coffee","../src/random3.coffee","../src/random4.coffee","../src/random5.coffee","../src/squareRoot.coffee","../src/subtract.coffee","../src/floorCeilRound.coffee","../src/ceil.coffee","../src/ceil2.coffee","../src/round.coffee","../src/round2.coffee","../src/f.coffee","../src/floor.coffee","../src/floor2.coffee","../src/takeOrDrop.coffee","../src/t.coffee","../src/take.coffee","../src/drop.coffee","../src/reverse.coffee","../src/some.coffee","../src/every.coffee","../src/highOrderFunc.coffee","../src/index.coffee"],"sourcesContent":["###*\n  * Is a utility function that can be used to perform\n  * various mathematical operations on arrays of numbers.\n  *\n  * @private\n  * @param {Array} v\n  * @param {Function} f\n  * @return {Number}\n###\n\nbasic = (v, f) ->\n  unless v instanceof Array\n    throw new Error \"Typeof: #{typeof v}\"\n\n  return v.reduce (s, e) ->\n    unless typeof +e == 'number'\n      return 0\n    return f s, e\n\nexport default basic\n","import basic from './basic.coffee'\n\n###*\n  * This function performs the addition operation on the\n  * elements of an array of numbers and returns their sum.\n  *\n  * @param {Array} v\n  * @return {Number}\n###\n\nadd = (v) ->\n  basic v, (s, e) -> s + e\n\nexport default add\n","import basic from './basic.coffee'\n\n###*\n  * This function performs the division operation on the\n  * elements of an array of numbers and returns their quotient.\n\n  * @param {Array} v\n  * @return {Number}\n###\n\ndivide = (v) ->\n  basic v, (s, e) -> s / e\n\nexport default divide\n","import basic from './basic.coffee'\n\n###*\n  * This function performs the multiplication operation on\n  * the elements of an array of numbers and returns their product.\n  *\n  * @param {Array} v\n  * @return {Number}\n###\n\nmultiply = (v) ->\n  basic v, (s, e) -> s * e\n\nexport default multiply\n","###*\n  * This function takes an array `o` as a parameter and returns\n  * a new array where each element is raised to the power of 2.\n  *\n  * @param {Array} o\n  * @return {Array} new array\n###\n\npower = (o) ->\n  s = o.slice()\n  return s.map (q) -> q ** 2\n\nexport default power\n","###*\n  * This function generates a random number\n  * between 0 and 9 (inclusive) and returns it.\n  *\n  * @return {Number}\n###\n\nrandom1 = ->\n  return Math.floor Math.random() * 10\n\nexport default random1\n","###*\n  * This function generates a random decimal number between 0 and 99\n  * (inclusive) without using Math.floor and returns it.\n  *\n  * @return {Number}\n###\n\nrandom2 = ->\n  return Math.random() * 100\n\nexport default random2\n","###*\n  * This function generates a random decimal number between 0 and 99\n  * (inclusive) with Math.floor and returns it.\n  *\n  * @return {Number}\n###\n\nrandom3 = ->\n  return Math.floor Math.random() * 100\n\nexport default random3\n","###*\n  * This function generates a random decimal number between 0 and 999\n  * (inclusive) without using Math.floor and returns it.\n  *\n  * @return {Number}\n###\n\nrandom4 = ->\n  return Math.random() * 1000\n\nexport default random4\n","###*\n  * This function generates a random decimal number between 0 and 999\n  * (inclusive) with using Math.floor and returns it.\n  *\n  * @return {Number}\n###\n\nrandom5 = ->\n  return Math.floor Math.random() * 1000\n\nexport default random5\n","###*\n  * Calculate the square root of each element in the input array.\n  *\n  * @param {Array} w\n  * @return {Array} new array\n###\n\nsquareRoot = (w) ->\n  a = w.slice()\n  return a.map (e) -> Math.sqrt e\n\nexport default squareRoot\n","import basic from './basic.coffee'\n\n###*\n  * This function performs the subtraction operation on the\n  * elements of an array of numbers and returns their difference.\n  *\n  * @param {Array} v\n  * @return {Number}\n###\n\nsubtract = (v) ->\n  basic v, (s, e) -> s - e\n\nexport default subtract\n","###*\n  * @private\n  * @param {Array} g\n  * @param {Function} y\n  * @return {Array} new array\n###\n\nfloorCeilRound = (g, y) ->\n  unless g instanceof Array\n    throw new Error \"Typeof: #{typeof g}\"\n\n  c = new Array()\n\n  for f in g\n    unless typeof +f == 'number'\n      return 0\n    p = y f\n    c.push p\n\n  return c\n\nexport default floorCeilRound\n","###*\n  * @param {Number} t\n  * @return {Number}\n###\n\nceil = (t) ->\n  return Math.ceil t\n\nexport default ceil\n","###*\n  * @param {Array} k\n  * @return {Array} new array\n###\n\nceil2 = (k) ->\n  floorCeilRound k, (k) -> Math.ceil k\n\nexport default ceil2\n","###*\n  * @param {Number} z\n  * @return {Number}\n###\n\nround = (z) ->\n  return Math.round z\n\nexport default round\n","###*\n  * @param {Array} h\n  * @return {Array} new array\n###\n\nround2 = (h) ->\n  floorCeilRound h, (h) -> Math.round h\n\nexport default round2\n","###*\n  * @return {Boolean} false\n###\n\nf = -> false\n\nexport default f\n","###*\n  * @param {Number} r\n  * @return {Number}\n###\n\nfloor = (r) ->\n  return Math.floor r\n\nexport default floor\n","###*\n  * @param {Array} n\n  * @return {Array} new array\n###\n\nfloor2 = (n) ->\n  floorCeilRound n, (n) -> Math.floor n\n\nexport default floor2\n","###*\n  * @private\n  * @param {Array} r\n  * @param {Number} h\n  * @return {Array} new array\n###\n\ntakeOrDrop = (r, h) ->\n  unless r instanceof Array\n    throw new Error \"Typeof: #{typeof r}\"\n\n  if h >= 0\n    return r.slice 0, r.length - h\n  else\n    return r.slice -h\n\nexport default takeOrDrop\n","###*\n  * @return {Boolean} true\n###\n\nt = -> true\n\nexport default t\n","import takeOrDrop from './takeOrDrop.coffee'\n\n###*\n  * @param {Array} b\n  * @param {Number} t\n  * @return {Array} new array\n###\n\ntake = (b, t) ->\n  takeOrDrop b, t\n\nexport default take\n","import takeOrDrop from './takeOrDrop.coffee'\n\n###*\n  * @param {Array} e\n  * @param {Number} p\n  * @return {Array} new array\n###\n\ndrop = (e, p) ->\n  takeOrDrop e, -p\n\nexport default drop\n","###*\n  * This function takes an array as input and returns\n  * a new array with the elements in reverse order.\n  *\n  * @param {Array} o\n  * @return {Array} new array\n###\n\nreverse = (o) ->\n  t = o.slice().reverse()\n  return t\n\nexport default reverse\n","###*\n  * This function `some` takes an array `a` and a\n  * string `w` as parameters and returns a boolean value.\n  *\n  * @param {Array} a\n  * @param {String} w\n  * @return {Boolean}\n###\n\nsome = (a, w) ->\n  unless a instanceof Array\n    throw new Error \"Typeof: #{typeof a}\"\n\n  n = String w\n\n  for i in a\n    if n = String i\n      return true\n\n  return false\n\nexport default some\n","###*\n  * This function `every` takes an array `l` and a string\n  * `c` as parameters and returns a boolean value.\n  *\n  * @param {Array} l\n  * @param {String} c\n  * @return {Boolean}\n###\n\nevery = (l, c) ->\n  unless l instanceof Array\n    throw new Error \"Typeof: #{typeof l}\"\n\n  x = String c\n\n  return l.every (e) -> e == x\n\nexport default every\n","###*\n  * highOrderFunc takes multiple arguments and returns a new array.\n  * It iterates over each argument and checks if it is a function. If it is,\n  * it calls the function and pushes the result into the new array.\n  *\n  * @param {Array} a\n  * @return {Array} new array\n###\n\nhighOrderFunc = (...a) ->\n  r = new Array()\n\n  for e in a\n    unless typeof e == 'function'\n      throw new Error 'Argument not a function'\n\n    r.push e()\n  return r\n\nexport default highOrderFunc\n","import basic from './basic.coffee'\nimport add from './add.coffee'\nimport divide from './divide.coffee'\nimport multiply from './multiply.coffee'\nimport power from './power.coffee'\nimport random1 from './random1.coffee'\nimport random2 from './random2.coffee'\nimport random3 from './random3.coffee'\nimport random4 from './random4.coffee'\nimport random5 from './random5.coffee'\nimport squareRoot from './squareRoot.coffee'\nimport subtract from './subtract.coffee'\nimport floorCeilRound from './floorCeilRound.coffee'\nimport ceil from './ceil.coffee'\nimport ceil2 from './ceil2.coffee'\nimport round from './round.coffee'\nimport round2 from './round2.coffee'\nimport f from './f.coffee'\nimport floor from './floor.coffee'\nimport floor2 from './floor2.coffee'\nimport takeOrDrop from './takeOrDrop.coffee'\nimport t from './t.coffee'\nimport take from './take.coffee'\nimport drop from './drop.coffee'\nimport reverse from './reverse.coffee'\nimport some from './some.coffee'\nimport every from './every.coffee'\nimport highOrderFunc from './highOrderFunc.coffee'\n\nF = {\n  f\n  t\n  basic\n  add\n  divide\n  multiply\n  power\n  random1\n  random2\n  random3\n  random4\n  random5\n  squareRoot\n  subtract\n  floorCeilRound\n  ceil\n  ceil2\n  round\n  round2\n  floor\n  floor2\n  takeOrDrop\n  take\n  drop\n  reverse\n  some\n  every\n  highOrderFunc\n}\n\nexport default F\n"],"names":["basic","v","f","Array","reduce","s","e","Error","basic$1","add","add$1","divide","divide$1","multiply","multiply$1","power","o","slice","map","q","power$1","random1","Math","floor","random","random1$1","random2","random2$1","random3","random3$1","random4","random4$1","random5","random5$1","squareRoot","w","sqrt","squareRoot$1","subtract","subtract$1","floorCeilRound","g","y","c","i","len","p","length","push","floorCeilRound$2","ceil","t","ceil$1","ceil2","k","ceil2$1","round","z","round$1","round2","h","round2$1","f$1","r","floor$1","floor2","n","floor2$1","takeOrDrop","takeOrDrop$1","t$1","take","b","take$1","drop","drop$1","reverse","reverse$1","some","a","j","String","some$1","every","l","x","every$1","highOrderFunc","highOrderFunc$1","F","F$1"],"mappings":"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"}